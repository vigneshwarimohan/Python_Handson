Flatten a dictionary
Description
Consider a nested dictionary as follows:

{'Fruit': 1, 'Vegetable': {'Cabbage': 2, 'Cauliflower': 3}, 'Spices': 4}

Your task is to flatten a nested dictionary and join the nested keys with the "_" character. For the above dictionary, the flattened dictionary would be as follows:

{'Fruit': 1, 'Vegetable_Cabbage': 2, 'Vegetable_Cauliflower': 3, 'Spices': 4}
The input will have a nested dictionary.

The output should have two lists. The first list will have keys and the second list should have values. Both lists should be sorted.

Sample Input:

{'Fruit': 1, 'Vegetable': {'Cabbage': 2, 'Cauliflower': 3}, 'Spices': 4}

Sample Output:

['Fruit', 'Spices', 'Vegetable_Cabbage', 'Vegetable_Cauliflower']
[1, 2, 3, 4]
You will find the inbuilt function isinstance() of python quite useful here. Read more about it here.

#Solution
import ast,sys
input_str = sys.stdin.read()
d = dict(ast.literal_eval(input_str))
#complete this function
fruits = []
total = []
def flatten_dict(d, separator='_', prefix=''):
    d1 = {}
    for k,v in d.items():
        check = isinstance(v,dict)
        if check:
            if(prefix == ''):     
                prefix = k
                #print("Prefix",prefix)
                d2 = flatten_dict(v,separator,prefix)
                #print(d2)
                d1.update(d2)
                prefix = ''
            else:           
                prefix = prefix+separator+k
                #print("Prefix",prefix)
                d2 = flatten_dict(v,separator,prefix)
                #print(d2)
                d1.update(d2)
                prefix = ''
        else:
            if(prefix == ''):
                #print("Prefix",prefix)
                d1[k] = v
                #print("d1",d1)
            else:
                c=prefix+separator+k
                #print("Prefix",prefix)
                #print("c:",c)
                d1[c] = v
                #print("d1:",d1)
   
    
                
    return(d1)
dictionary_flat = flatten_dict(d, separator='_', prefix='')
#print("dictionary_flat",dictionary_flat)

for fruit,count in dictionary_flat.items():
    fruits.append(fruit)
    total.append(count)
print(sorted(fruits))
print(sorted(total))